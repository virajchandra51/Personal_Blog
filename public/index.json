[{"content":" Introduction:\nWelcome to the latest update on my Google Summer of Code (GSoC) journey with PostgreSQL. In this biweekly report, I\u0026rsquo;ll be walking you through the thrilling developments of the past two weeks. From extension management and upgradability to overcoming challenges and seeking support, I\u0026rsquo;ll be your guide through the highs and lows of my GSoC project.\nShifting Focus: Extension Management and Upgradability\nIn the quest for enhancing the user experience, I pivoted my attention towards extension management and upgradability. To showcase this feature, I hatched a plan to employ a PGXN example in the upcoming Quick Start tutorial. This promises to be a game-changer, allowing users to seamlessly upgrade their extensions for a more polished experience.\nExpanding Horizons: Tutorial Enhancement\nDetermined to provide a comprehensive learning resource, I extended the Quick Start tutorial to encompass the essentials of distributing Postgres extensions. By doing so, I\u0026rsquo;m enabling developers to share their own extensions more effectively, fostering a collaborative environment that fuels innovation.\nUnveiling the Procedural: PL/pgSQL Exploration\nVenturing into the realm of procedural languages, I dedicated time to unraveling the intricacies of PL/pgSQL. This deep dive was crucial in my quest to understand how to create procedural functions within extensions, a skill set that promises to unlock a realm of possibilities.\nTriumph over Challenges: PL/Python Installation\nThe path to success isn\u0026rsquo;t without its share of obstacles. While grappling with the installation of PL/Python using pgenv, I encountered a series of challenges. But with persistence and resourcefulness, I conquered these hurdles by making a strategic shift to PostgreSQL.app, ensuring the smooth progression of my work.\nTutorial Milestones: From PL/Python to C Extensions\nCelebrating the milestones, I completed the Quick Start tutorial for PL/Python. This accomplishment marks a pivotal step in educating users about defining functions, handling exceptions, and harnessing external Python modules. On another front, I made significant strides with the PL/pgSQL extension, receiving encouraging feedback from my mentor. This validation bolsters my confidence and fuels my drive to keep pushing the envelope.\nDabbling in the Realm of C: Creating Extensions\nA highlight of this period was successfully crafting a C extension using an external language to introduce a simple yet powerful function. Ensuring that every detail was covered, I meticulously documented the makefile and PGXS components, contributing to a seamless experience for users.\nSeeking Wisdom: Community Engagement\nRecognizing the strength of collaboration, I sought guidance on creating a Python extension for PostgreSQL. Unfortunately, the relevant material was scarce. Undeterred, I turned to the PostgreSQL Slack channel, tapping into the collective knowledge of the community for a solution.\nNavigating Feedback: Refinement and Progress\nFeedback from mentors proved invaluable, guiding me towards incorporating suggested changes to the procedural languages within my extensions. This iterative process has helped refine my work and inch closer to perfection.\nTowards Integration: Converting Documentation\nThe culmination of these efforts is the exciting prospect of converting the Markdown documentation to SGML format. This transition will seamlessly integrate the content into the official PostgreSQL documentation system, aligning it with the established standards.\nConclusion:\nReflecting on these past weeks, I\u0026rsquo;m pleased to report substantial progress in the extension and Quick Start tutorials. With the unwavering support of mentors, the vibrant developer community, and online resources. As I stand on the brink of converting the documentation to SGML, I\u0026rsquo;m excited for the next phase of this GSoC journey.\n","permalink":"/blog/week6/","summary":"Introduction:\nWelcome to the latest update on my Google Summer of Code (GSoC) journey with PostgreSQL. In this biweekly report, I\u0026rsquo;ll be walking you through the thrilling developments of the past two weeks. From extension management and upgradability to overcoming challenges and seeking support, I\u0026rsquo;ll be your guide through the highs and lows of my GSoC project.\nShifting Focus: Extension Management and Upgradability\nIn the quest for enhancing the user experience, I pivoted my attention towards extension management and upgradability.","title":"GSoC’23 at PostgreSQL (Biweekly Report 6)"},{"content":" Introduction:\nWelcome to the latest update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been focused on Postgres extension development. Over the past two weeks, I\u0026rsquo;ve encountered challenges, made progress in updating tutorials and extensions, and sought help from online communities. In this blog post, I will share the key highlights of my journey during this phase.\nHandling Functions and Packaging:\nI added information about handling functions in different extension versions to the makefile. This addition helps ensure smooth functionality across multiple versions. Additionally, I packaged a final version of the quick start, providing users with an easy-to-use and comprehensive resource.\nIssue Reporting and Troubleshooting:\nDuring my work, I encountered an issue with pgxn_utils, which I promptly reported on GitHub and sought assistance on Stack Overflow. By doing so, I not only sought a resolution for myself but also helped others who may face the same problem.\nChallenges and Perseverance:\nI faced challenges while installing PL/v8. I broke down at the end and recorded my misery in this blog.\nUpdating pg_sample_ext:\nI updated pg_sample_ext to version 1.1, introducing composite types, domains, and an enumerated type. These additions enhance the functionality and versatility of the extension. Furthermore, a new update included a custom operator for performing specific data operations, and I included update scripts to assist users during the transition.\nIntegration of Postgres Documentation:\nTo enrich the learning experience for users, I integrated Postgres documentation links into the quick start tutorial. This allows readers to delve deeper into specific topics and access additional resources.\nPassed the Midterm Evaluations:\nGot Great Feedback from mentors , and getting that sweet stipend is definitely a nice bonus. It\u0026rsquo;s not all about the money, but hey, who doesn\u0026rsquo;t love a little extra cash in their pocket?\nChallenges with C Extension and Alternatives:\nWhile attempting a C extension, I encountered system issues that hindered progress. Seeking help on Stack Overflow, I am currently awaiting a response to overcome this obstacle. Meanwhile, I have shifted my focus to exploring procedural languages as an alternative solution.\nProductivity and Travel:\nDuring this phase, I had to travel back to my college as summer vacations had ended, which affected my productivity to some extent. This might slow my progress but a few extra hours to cover up won\u0026rsquo;t hurt.\nConclusion:\nDuring the last two weeks of my GSoC project, I have made progress by updating tutorials and extensions, while also facing challenges with the C extension. By troubleshooting and seeking help from online communities, I am actively working towards a resolution. Shifting focus to procedural languages has allowed me to make progress where needed.\n","permalink":"/blog/week5/","summary":"Introduction:\nWelcome to the latest update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been focused on Postgres extension development. Over the past two weeks, I\u0026rsquo;ve encountered challenges, made progress in updating tutorials and extensions, and sought help from online communities. In this blog post, I will share the key highlights of my journey during this phase.\nHandling Functions and Packaging:\nI added information about handling functions in different extension versions to the makefile.","title":"GSoC’23 at PostgreSQL (Biweekly Report 5)"},{"content":"For most period of high school / senior school, I have studied and inscribed the sacred runes and performed thearcane rituals that breathe life into the realm of the Internet. I hope and brag to conjure a website from nothing into existence, fully formed, before any of my peers. I do not use tricks, nor is this magic.\nI\u0026rsquo;m currently studying and future graduating from National Institute Of Technology, Raipur, with Bachelors In Information Technology.\nVisit my LinkedIn profile for more details.\nRepos / Projects Here\u0026rsquo;s a sample of some stuff I have worked on till now.\nCodeUtsava 7.0 - A Full Stack website for the Annual Coding Fest of NIT Raipur - CodeUtsava - 7ᵗʰ Edition for Year 2023-2024.\nCodeUtsava 6.0 - A Full Stack website for the Annual Coding Fest of NIT Raipur - CodeUtsava - 6ᵗʰ Edition for Year 2022-2023.\nVisionary - An Iris Control Detection System, built on face and iris matrix estimation, to achieve mouse functionalities such as mouse control movements, along with left and right clicks, all controlled by the Iris of a Person, specially in cases of Disability and Body Paralysis.\nMediVault - An Ethereum / Blockchain based EHR System, for accessing and managing Health Records of a patient, all under a decentralized database.\nDbugger - A Tutoring and Mentorship platform for interaction and teaching of various concepts such as DSA, C++, JAVA, Web Development, for the Sophomore batch of the college.\nBlogs Day to Day Account of my GSoC Journey with PostgreSQL\nPostgreSQL - GSoC Journey Medium Blog\n","permalink":"/about/","summary":"For most period of high school / senior school, I have studied and inscribed the sacred runes and performed thearcane rituals that breathe life into the realm of the Internet. I hope and brag to conjure a website from nothing into existence, fully formed, before any of my peers. I do not use tricks, nor is this magic.\nI\u0026rsquo;m currently studying and future graduating from National Institute Of Technology, Raipur, with Bachelors In Information Technology.","title":"About"},{"content":" Introduction:\nWelcome to another update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been making significant strides in Postgres extension development. From Day 43 to Day 56, I focused on finalizing the tutorial content, working on sample extensions, addressing issues, and incorporating official documentation references. In this blog post, I will share the key highlights of my progress during this phase of the project.\nGithub Repository: https://github.com/IshaanAdarsh/Postgres-extension-tutorial\nExtension Management and Upgradability:\nTo ensure comprehensive coverage, I initially completed the summary of the extension management and upgradability section. However, I realized that additional details were needed to provide a thorough understanding of these concepts. Therefore, I finalized all ten sections of the tutorial and devoted attention to troubleshooting and fine-tuning the MVP code.\nWorking with SQL and Python:\nI expanded my work on SQL and Python by incorporating necessary sample code for extensions. While encountering challenges along the way, I persevered and resolved issues to ensure the smooth execution of the development process.\nChanged my approach:\nAfter a discussion with my mentor, David Wheeler, it was recommended that I shift my project approach. Instead of focusing on reference documentation, I will now create a quick start guide for a simple SQL-only extension, gradually expanding on it. It was also advised to ensure the accuracy of information in the documentation by including examples or linking to official documentation. While this requires starting over, I am confident in completing the project on time.\nRegression Testing and Version Control:\nTo validate the functionality and stability of the extensions, I performed regression testing. During this process, I encountered issues that I carefully documented to ensure a seamless development experience for users. Troubleshooting these issues allowed me to refine the extensions and make them more robust. Used the GitHub Issues to record the problems i faced and their solutions. (added StackOverflow links also)\nCreated a PGXN Account:\nTo get first-hand experience on distribution of a Postgres Extension, i created a PGXN account\nRequi3m \u0026mdash; https://pgxn.org/user/requi3m\nHere i will uplaod my sample extensions and all the updated versions.\nPackaging and Uploading to GitHub and PGXN:\nTo make the extension accessible to users, I packaged it and uploaded it to GitHub and PGXN. While facing some hurdles during the packaging process, I resolved them by updating files, ensuring the correct version number, and seeking assistance from the Stack Overflow community. This collaborative effort enabled me to create a reliable and accessible package.\nGithub Repository: https://github.com/IshaanAdarsh/my_extension\nUpgrading the Extension:\nContinuing my work on the extension, I upgraded it to a new version. This involved adding new functions, updating file changes, correcting syntax errors, and providing necessary documentation. Resolving issues with the META.json file and finalizing the required files were crucial steps in completing the upgraded extension.\nUpdating the Tutorial and Sample Extensions:\nTo enhance the tutorial\u0026rsquo;s comprehensiveness, I addressed issues in the second version of the extension. I added new functions, updated the extension version, and rectified any syntax errors. I also included documentation files and removed unnecessary ones to finalize the extension.\nCreating Sample Extensions:\nTaking a step further, I started creating sample extensions to demonstrate different function types and PostgreSQL\u0026rsquo;s extensibility. I provided detailed examples and explanations to facilitate effective learning for developers.\nGithub Repository: https://github.com/IshaanAdarsh/pg_sample_ext\nIncorporating References to Official Documentation:\nTo complement the tutorial and provide additional resources, I included references to the official PostgreSQL documentation. This allows readers to delve deeper into specific topics and broaden their understanding of Postgres extension development.\nConclusion:\nDuring the Day 43 to Day 56 phase of my GSoC project, I made substantial progress by finalizing the tutorial content, then i pivoted on my approach and started working on sample extensions, and addressing issues with the help of official documentation and external resources. By incorporating references, I aimed to enrich the learning experience for readers and encourage self-learning. With each step, I have moved closer to creating an informative and accessible tutorial, while also gaining a deeper understanding of Postgres extension development.\n","permalink":"/blog/week4/","summary":"Introduction:\nWelcome to another update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been making significant strides in Postgres extension development. From Day 43 to Day 56, I focused on finalizing the tutorial content, working on sample extensions, addressing issues, and incorporating official documentation references. In this blog post, I will share the key highlights of my progress during this phase of the project.\nGithub Repository: https://github.com/IshaanAdarsh/Postgres-extension-tutorial","title":"GSoC’23 at PostgreSQL (Biweekly Report 4)"},{"content":" Introduction:\nWelcome to another update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been diving deeper into the world of Postgres extension development. In this blog post, I\u0026rsquo;ll share the highlights of my progress from Day 29 to Day 42, including my exploration of PGXN and PGXS, the improvement of the Minimum Viable Product (MVP), content organization, and my focus on regression testing and extension management.\nPGXN and PGXS:\nTo simplify the packaging, distribution, and installation of Postgres extensions, I familiarized myself with tools like PGXN and PGXS. Understanding their benefits and functionality was crucial in streamlining the development and deployment process. Additionally, I explored the advantages of procedural languages, such as PL/pgSQL and PL/Python, for extension development, expanding my knowledge of supported languages.\nThorough Tutorial Approach:\nRecognizing that existing quick start guides often lack in-depth coverage, I aimed to provide a more comprehensive tutorial. Taking into account suggestions from my mentor, I worked on refining the MVP by incorporating a Makefile and improving regression testing. These enhancements ensured a more robust and reliable learning experience for developers.\nOrganizing Content and Peer Review:\nTo make the tutorial easily navigable, I outlined and organized the content in a Markdown file. This deliberate structuring facilitated efficient learning and comprehension. I planned to submit an alpha version of the tutorial for peer review, seeking valuable feedback and suggestions to further enhance its quality.\nCondensing and Reviewing Drafts:\nTo distill the key points and concepts from the gathered content, I summarized and condensed the material in the Markdown file. Meticulously reviewing the draft was essential to ensure its accuracy, completeness, and relevance. This step allowed me to refine the tutorial and present it in a concise and informative manner.\nGit Repository Restructuring and Prerequisite Content:\nTo enhance the clarity and organization of my Git repository, I restructured it, paying close attention to detail and clarity in my explanations. Moreover, I focused on providing solid foundational content as prerequisites for learners. By incorporating these improvements, I aimed to empower developers with a strong understanding of the fundamental concepts necessary for Postgres extension development.\nIntegration of PGXN and Makefile Insights:\nIncorporating PGXN into the tutorial became an important aspect of my project. I highlighted the benefits and utility of using PGXN in distributing and installing extensions seamlessly. Additionally, I dedicated significant effort to address challenges and provide comprehensive insights into the makefile section. This valuable information simplifies this critical aspect of extension development, facilitating a more efficient workflow.\nPull Requests and Regression Testing:\nTaking a short break from the project allowed me to recharge and return with renewed focus. After resuming work, I submitted eight pull requests for review, focusing on regression testing and extension management. This collaborative approach ensures that my work undergoes thorough evaluation and refinement.\nFinalizing Regression Testing and Seeking Feedback:\nI dedicated significant time to finalize the regression testing section. Careful attention to detail and extensive testing ensured the quality and reliability of this crucial aspect of Postgres extension development. I planned to submit it for review, actively seeking feedback to further improve its effectiveness.\nConclusion:\nDuring the past weeks of my GSoC project, I made significant progress in refining content, improving the tutorial structure, and incorporating suggestions to enhance the MVP. My exploration of complex topics like makefiles and PGXN has strengthened my Postgres extension development skills. By focusing on regression testing and extension management, I ensured the reliability and quality of the tutorial. The organization of my Git repository and the attention given to prerequisite content further solidify the learning experience for developers.\n","permalink":"/blog/week3/","summary":"Introduction:\nWelcome to another update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been diving deeper into the world of Postgres extension development. In this blog post, I\u0026rsquo;ll share the highlights of my progress from Day 29 to Day 42, including my exploration of PGXN and PGXS, the improvement of the Minimum Viable Product (MVP), content organization, and my focus on regression testing and extension management.\nPGXN and PGXS:","title":"GSoC’23 at PostgreSQL (Biweekly Report 3)"},{"content":" Introduction:\nWelcome to another update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been diving deep into the world of Postgres extension development. Over the past two weeks (Day 14 to Day 28), I\u0026rsquo;ve made significant progress, overcoming challenges, refining tutorial content, and organizing my repository. In this blog post, I will share the highlights of my journey, from restructuring tutorials to mastering the Makefile and everything in between.\nRestructuring Tutorials and Refining Content:\nTo ensure comprehensive coverage of essential topics in Postgres extension development, I started by restructuring my tutorial list. I carefully refined the content, creating a first draft that would serve as a valuable resource for developers. To identify any gaps, I also explored third-party resources, incorporating their insights to refine my content further.\nExploring Extension Creation Methods:\nOne of the major challenges I encountered was dealing with Makefile errors. However, by diligently studying the Makefile\u0026rsquo;s role and best practices for its configuration, I was able to overcome these issues. I explored different extension creation methods and documented my learnings, making it easier for future developers to navigate through potential hurdles.\nMilestones and Deliverables:\nDuring this phase, I achieved important milestones by completing the Minimum Viable Product (MVP) tutorial and the associated deliverables list. By consulting the official documentation and limiting my exploration of redundant resources, I successfully resolved the Makefile issues. This allowed me to stay focused on creating original tutorial content and providing a streamlined development experience.\nRepository Organization:\nTo enhance the accessibility and usability of my GitHub repository, I dedicated time to reorganize the folders. I created separate sections for code, quick start content, and archival of old content. This systematic approach ensures that developers can easily find what they need and allows for efficient collaboration.\nExploring Prerequisites:\nUnderstanding the prerequisites for extension creation was crucial. I delved into the architecture of extensions, familiarized myself with the supported languages, and grasped the underlying concepts. This groundwork set a solid foundation for the rest of my journey.\nDirectory Hierarchy:\nRecognizing the importance of a well-structured directory hierarchy, I proposed basic, intermediate, and advanced structures based on real-world extension examples. By studying these examples, I refined my own hierarchy to ensure clarity and maintainability.\nTaking a Break:\nIn the midst of this intense project, I recognized the need to recharge. Taking a short break allowed me to rejuvenate and return with fresh perspectives and renewed energy, enabling me to tackle challenges more effectively.\nDemystifying Essential Extension Files:\nTo deepen my understanding, I focused on demystifying crucial extension files such as SQL scripts, control files, Makefiles, code files, regression tests, and documentation. This comprehensive exploration equipped me with the necessary knowledge to create robust and well-documented extensions.\nMastering the Makefile:\nA key aspect of my journey was mastering the Makefile, which involved understanding targets/rules, commands, phony targets, dependencies, and integrating regression tests. By gaining proficiency in the Makefile, I streamlined my development workflow and improved the overall efficiency of my project.\nConclusion:\nOver the past two weeks of my GSoC project, I\u0026rsquo;ve made significant progress in Postgres extension development. By restructuring tutorials, refining content, and exploring third-party resources, I\u0026rsquo;ve created a valuable resource for developers. Overcoming challenges, such as Makefile errors, and achieving milestones, including the completion of the MVP tutorial, have further solidified my knowledge. Organizing my repository, understanding prerequisites, refining the directory hierarchy, and demystifying essential extension files have all contributed to a well-rounded understanding of the topic. Mastering the Makefile has been a significant achievement, streamlining my development workflow\n","permalink":"/blog/week2/","summary":"Introduction:\nWelcome to another update on my Google Summer of Code (GSoC) project, where I\u0026rsquo;ve been diving deep into the world of Postgres extension development. Over the past two weeks (Day 14 to Day 28), I\u0026rsquo;ve made significant progress, overcoming challenges, refining tutorial content, and organizing my repository. In this blog post, I will share the highlights of my journey, from restructuring tutorials to mastering the Makefile and everything in between.","title":"GSoC’23 at PostgreSQL (Biweekly Report 2)"},{"content":"I got accepted for Google Summer of Code 2023 with PostgreSQL . I\u0026rsquo;m stoked to be working on a project where I\u0026rsquo;ll be creating an easy-to-follow tutorial on writing Postgres extension under the guidance of awesome mentors.\nMy Project:\nGSoC Proposal Project Page Mentors: Jimmy Angelakos, David Wheeler As a GSoC student working on a Postgres extension project, my first two weeks have been a journey filled with diverse experiences. I began by meeting my mentors who provided valuable insights into the project\u0026rsquo;s timeline, deliverables, and the scope of possibilities. The GSoC introductory meeting provided me a better understanding of the program structure and what to expect.\nThe Postgres extension development process can be challenging, particularly for beginners, and I encountered several issues during this period. These hurdles ranged from steep learning curves to versioning problems, with inconsistent structuring and lack of clarity in available resources being particularly problematic.\nDespite these challenges, I made significant progress towards building a fundamental understanding of Postgres extension development processes. I documented each challenge and solution to create a useful resource for future developers.\nBuilding an MVP(Minimum Viable Product) Postgres extension gave me further insight into extension development.\nDuring this period, I encountered issues with accessing control files, versioning incompatibility, and commenting problems. These issues prompted me to seek solutions to improve my understanding, and by documenting my issues and solutions, I aim to provide developers with easier access to solutions.\nDuring the second week, I spent time studying regression testing. While I encountered issues implementing pg_regress, I discovered alternative regression testing tools like pgTAP.\nOverall, my experience in the first two weeks of this project has been both enriching and challenging. Throughout this journey, I have gained valuable insights, developed my understanding of fundamental concepts, and honed my problem-solving skills. As I continue with this project, I am excited about the opportunities and challenges that lay ahead.\n","permalink":"/blog/week1/","summary":"I got accepted for Google Summer of Code 2023 with PostgreSQL . I\u0026rsquo;m stoked to be working on a project where I\u0026rsquo;ll be creating an easy-to-follow tutorial on writing Postgres extension under the guidance of awesome mentors.\nMy Project:\nGSoC Proposal Project Page Mentors: Jimmy Angelakos, David Wheeler As a GSoC student working on a Postgres extension project, my first two weeks have been a journey filled with diverse experiences. I began by meeting my mentors who provided valuable insights into the project\u0026rsquo;s timeline, deliverables, and the scope of possibilities.","title":"GSoC’23 at PostgreSQL (Biweekly Report 1)"}]